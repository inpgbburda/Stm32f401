{
    "version": "2.0.0",
    "tasks": [
        {
            "label": "build project",
            "type": "shell",
            "command": "${config:makePath} all",
            "args": [],
            "options": {
                "cwd": "${workspaceFolder}/Output"
            },
            "group": {
                "kind": "build",
                "isDefault": true
            },
            "problemMatcher": "$gcc"
        },
        {
            "label": "clean project",
            "type": "shell",
            "command": "${config:makePath} clean",
            "args": [],

            "options": {
                "cwd": "${workspaceFolder}/Output"
            },
            "group": {
                "kind": "build",
                "isDefault": true
            },
            "problemMatcher": []
        },
        {
            "label": "generate makefile SA=on",
            "type": "shell",
            "command": "${config:cmakePath} -DSTATIC_ANALYSIS=ON",
            "args": [
                ".",
                "--preset=default"
            ],

            "options": {
                "cwd": "${workspaceFolder}/Tools/Cmake/"
            },
            "group": {
                "kind": "build",
                "isDefault": true
            },
            "problemMatcher": []
        },
        {
            "label": "generate makefile SA=off",
            "type": "shell",
            "command": "${config:cmakePath}",
            "args": [
                        ".",
                        "--preset=default"
                    ],
            "options": {
                "cwd": "${workspaceFolder}/Tools/Cmake"
            },
            "group": {
                "kind": "build",
                "isDefault": true
            },
            "problemMatcher": []
        },
        {
            "label": "target erase",
            "type": "shell",
            "command": "${config:Stm32ProgrammerPath}",
            "args": [
                        "--erase",
                        "all"
                    ],
            "group": {
                "kind": "build",
                "isDefault": true
            },
            "problemMatcher": []
        },
        {
            "label": "target flash",
            "type": "shell",
            "command": "${config:Stm32ProgrammerPath}",
            "args": [
                        "--connect",    /*connect to the CPU*/
                        "port=SWD",
                        "--download",   /*flash the binary into memory*/
                        "stm32f401.hex",
                        "--start",      /*start the execution*/
                    ],
            "options": {
                "cwd": "${workspaceFolder}/Output"
            },
            "group": {
                "kind": "build",
                "isDefault": true
            },
            "problemMatcher": []
        },
        {
            "label": "UT - generate all makefiles ",
            "type": "shell",
            "command": "configure_all_modules.bat",
            "args": [
                        "${config:cmakePath}"
                    ],
            "options": {
            },
            "group": {
                "kind": "build",
                "isDefault": true
            },
            "problemMatcher": []
        },
        {
            "label": "UT - pwm build",
            "type": "shell",
            "command": "${config:makePath} all",
            "args": [
                    ],
            "options": {
                "cwd": "${workspaceFolder}/Sw_Components/04_Drv/pwm/pwm_UT/Output_UT"
            },
            "group": {
                "kind": "build",
                "isDefault": true
            },
            "problemMatcher": ["$gcc"]
        },
        {
            "label": "UT - pwm clean",
            "type": "shell",
            "command": "${config:makePath} clean",
            "args": [
                    ],
            "options": {
                "cwd": "${workspaceFolder}/Sw_Components/04_Drv/pwm/pwm_UT/Output_UT"
            },
            "group": {
                "kind": "build",
                "isDefault": true
            },
            "problemMatcher": []
        },
        {
            "label": "UT - pwm run",
            "type": "shell",
            "command": "Pwm_Ut.exe",
            "args": [
                    ],
            "options": {
                "cwd": "${workspaceFolder}/Sw_Components/04_Drv/pwm/pwm_UT/Output_UT"
            },
            "group": {
                "kind": "test",
                "isDefault": true
            },
            "problemMatcher": []
        },
        {
            "label": "UT - pwm generate mocks",
            "type": "shell",
            "command": "ruby Tools/Unit_Testing/Cmock/lib/cmock.rb -oTools/Unit_Testing/Cmock/config_files/gcc.yml Sw_Components/04_Drv/pwm/pwm.h",
            "args": [
                    ],
            "options": {
            },
            "group": {
                "kind": "test",
                "isDefault": true
            },
        },
        {
            "label": "UT - spi build",
            "type": "shell",
            "command": "${config:makePath} all",
            "args": [
                    ],
            "options": {
                "cwd": "${workspaceFolder}/Sw_Components/04_Drv/spi/spi_UT/Output_UT"
            },
            "group": {
                "kind": "build",
                "isDefault": true
            },
            "problemMatcher": ["$gcc"]
        },
        {
            "label": "UT - spi clean",
            "type": "shell",
            "command": "${config:makePath} clean",
            "args": [
                    ],
            "options": {
                "cwd": "${workspaceFolder}/Sw_Components/04_Drv/spi/spi_UT/Output_UT"
            },
            "group": {
                "kind": "build",
                "isDefault": true
            },
            "problemMatcher": []
        },
        {
            "label": "UT - spi run",
            "type": "shell",
            "command": "Spi_Ut.exe",
            "args": [
                    ],
            "options": {
                "cwd": "${workspaceFolder}/Sw_Components/04_Drv/spi/spi_UT/Output_UT"
            },
            "group": {
                "kind": "test",
                "isDefault": true
            },
            "problemMatcher": []
        },
        {
            "label": "UT - spi generate mocks",
            "type": "shell",
            "command": "ruby Tools/Unit_Testing/Cmock/lib/cmock.rb -oTools/Unit_Testing/Cmock/config_files/gcc.yml Sw_Components/04_Drv/spi/spi.h",
            "args": [
                    ],
            "options": {
            },
            "group": {
                "kind": "test",
                "isDefault": true
            },
        },
        {
            "label": "UT - motor_ctrl build",
            "type": "shell",
            "command": "${config:makePath} all",
            "args": [
                    ],
            "options": {
                "cwd": "${workspaceFolder}/Sw_Components/01_App/MotorCtrl/motor_ctrl_UT/Output_UT"
            },
            "group": {
                "kind": "build",
                "isDefault": true
            },
            "problemMatcher": ["$gcc"]
        },
        {
            "label": "UT - motor_ctrl clean",
            "type": "shell",
            "command": "${config:makePath} clean",
            "args": [
                    ],
            "options": {
                "cwd": "${workspaceFolder}/Sw_Components/01_App/MotorCtrl/motor_ctrl_UT/Output_UT"
            },
            "group": {
                "kind": "build",
                "isDefault": true
            },
            "problemMatcher": []
        },
        {
            "label": "UT - motor_ctrl run",
            "type": "shell",
            "command": "Motor_Ctrl_Ut.exe",
            "args": [
                    ],
            "options": {
                "cwd": "${workspaceFolder}/Sw_Components/01_App/MotorCtrl/motor_ctrl_UT/Output_UT"
            },
            "group": {
                "kind": "test",
                "isDefault": true
            },
            "problemMatcher": []
        },
        {
            "label": "UT - motor ctrl generate mocks",
            "type": "shell",
            "command": "${workspaceFolder}/Sw_Components/01_App/MotorCtrl/motor_ctrl_UT/header_files.bat",
            "args": [
                        "${workspaceFolder}"
                    ],
            "options": {
            },
            "group": {
                "kind": "test",
                "isDefault": true
            },
        },
    ]
}