
stm32f401.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   00000194  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         00000210  08000194  08000194  00010194  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00000004  080003a4  080003a4  000103a4  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .ARM.extab    00000000  080003a8  080003a8  0002042c  2**0
                  CONTENTS
  4 .ARM          00000000  080003a8  080003a8  0002042c  2**0
                  CONTENTS
  5 .preinit_array 00000000  080003a8  080003a8  0002042c  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   0000000c  080003a8  080003a8  000103a8  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .fini_array   00000004  080003b4  080003b4  000103b4  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .data         0000042c  20000000  080003b8  00020000  2**3
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          00000020  2000042c  080007e4  0002042c  2**2
                  ALLOC
 10 ._user_heap_stack 00000604  2000044c  080007e4  0002044c  2**0
                  ALLOC
 11 .ARM.attributes 00000032  00000000  00000000  0002042c  2**0
                  CONTENTS, READONLY
 12 .debug_frame  0000026c  00000000  00000000  00020460  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 13 .debug_info   000005a9  00000000  00000000  000206cc  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_abbrev 00000160  00000000  00000000  00020c75  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_aranges 00000070  00000000  00000000  00020dd8  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_ranges 00000048  00000000  00000000  00020e48  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_line   00000382  00000000  00000000  00020e90  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_str    000003f4  00000000  00000000  00021212  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .comment      00000049  00000000  00000000  00021606  2**0
                  CONTENTS, READONLY

Disassembly of section .text:

08000194 <__do_global_dtors_aux>:
 8000194:	b510      	push	{r4, lr}
 8000196:	4c05      	ldr	r4, [pc, #20]	; (80001ac <__do_global_dtors_aux+0x18>)
 8000198:	7823      	ldrb	r3, [r4, #0]
 800019a:	b933      	cbnz	r3, 80001aa <__do_global_dtors_aux+0x16>
 800019c:	4b04      	ldr	r3, [pc, #16]	; (80001b0 <__do_global_dtors_aux+0x1c>)
 800019e:	b113      	cbz	r3, 80001a6 <__do_global_dtors_aux+0x12>
 80001a0:	4804      	ldr	r0, [pc, #16]	; (80001b4 <__do_global_dtors_aux+0x20>)
 80001a2:	f3af 8000 	nop.w
 80001a6:	2301      	movs	r3, #1
 80001a8:	7023      	strb	r3, [r4, #0]
 80001aa:	bd10      	pop	{r4, pc}
 80001ac:	2000042c 	.word	0x2000042c
 80001b0:	00000000 	.word	0x00000000
 80001b4:	0800038c 	.word	0x0800038c

080001b8 <frame_dummy>:
 80001b8:	b508      	push	{r3, lr}
 80001ba:	4b03      	ldr	r3, [pc, #12]	; (80001c8 <frame_dummy+0x10>)
 80001bc:	b11b      	cbz	r3, 80001c6 <frame_dummy+0xe>
 80001be:	4903      	ldr	r1, [pc, #12]	; (80001cc <frame_dummy+0x14>)
 80001c0:	4803      	ldr	r0, [pc, #12]	; (80001d0 <frame_dummy+0x18>)
 80001c2:	f3af 8000 	nop.w
 80001c6:	bd08      	pop	{r3, pc}
 80001c8:	00000000 	.word	0x00000000
 80001cc:	20000430 	.word	0x20000430
 80001d0:	0800038c 	.word	0x0800038c

080001d4 <__arm_set_fast_math>:
 80001d4:	eef1 3a10 	vmrs	r3, fpscr
 80001d8:	f043 7380 	orr.w	r3, r3, #16777216	; 0x1000000
 80001dc:	eee1 3a10 	vmsr	fpscr, r3
 80001e0:	4770      	bx	lr
 80001e2:	bf00      	nop

080001e4 <main>:
int main(void)
{
 80001e4:	b480      	push	{r7}
 80001e6:	af00      	add	r7, sp, #0
    while (1){
 80001e8:	e7fe      	b.n	80001e8 <main+0x4>
	...

080001ec <SystemInit>:
  *         configuration.
  * @param  None
  * @retval None
  */
void SystemInit(void)
{
 80001ec:	b480      	push	{r7}
 80001ee:	af00      	add	r7, sp, #0
  /* FPU settings ------------------------------------------------------------*/
  #if (__FPU_PRESENT == 1) && (__FPU_USED == 1)
    SCB->CPACR |= ((3UL << 10*2)|(3UL << 11*2));  /* set CP10 and CP11 Full Access */
 80001f0:	4b06      	ldr	r3, [pc, #24]	; (800020c <SystemInit+0x20>)
 80001f2:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
 80001f6:	4a05      	ldr	r2, [pc, #20]	; (800020c <SystemInit+0x20>)
 80001f8:	f443 0370 	orr.w	r3, r3, #15728640	; 0xf00000
 80001fc:	f8c2 3088 	str.w	r3, [r2, #136]	; 0x88

  /* Configure the Vector Table location -------------------------------------*/
#if defined(USER_VECT_TAB_ADDRESS)
  SCB->VTOR = VECT_TAB_BASE_ADDRESS | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal SRAM */
#endif /* USER_VECT_TAB_ADDRESS */
}
 8000200:	bf00      	nop
 8000202:	46bd      	mov	sp, r7
 8000204:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000208:	4770      	bx	lr
 800020a:	bf00      	nop
 800020c:	e000ed00 	.word	0xe000ed00

08000210 <Reset_Handler>:

    .section  .text.Reset_Handler
  .weak  Reset_Handler
  .type  Reset_Handler, %function
Reset_Handler:  
  ldr   sp, =_estack      /* set stack pointer */
 8000210:	f8df d034 	ldr.w	sp, [pc, #52]	; 8000248 <LoopFillZerobss+0xe>
  
/* Call the clock system initialization function.*/
  bl  SystemInit  
 8000214:	f7ff ffea 	bl	80001ec <SystemInit>

/* Copy the data segment initializers from flash to SRAM */  
  ldr r0, =_sdata
 8000218:	480c      	ldr	r0, [pc, #48]	; (800024c <LoopFillZerobss+0x12>)
  ldr r1, =_edata
 800021a:	490d      	ldr	r1, [pc, #52]	; (8000250 <LoopFillZerobss+0x16>)
  ldr r2, =_sidata
 800021c:	4a0d      	ldr	r2, [pc, #52]	; (8000254 <LoopFillZerobss+0x1a>)
  movs r3, #0
 800021e:	2300      	movs	r3, #0
  b LoopCopyDataInit
 8000220:	e002      	b.n	8000228 <LoopCopyDataInit>

08000222 <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 8000222:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 8000224:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 8000226:	3304      	adds	r3, #4

08000228 <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 8000228:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 800022a:	428c      	cmp	r4, r1
  bcc CopyDataInit
 800022c:	d3f9      	bcc.n	8000222 <CopyDataInit>
  
/* Zero fill the bss segment. */
  ldr r2, =_sbss
 800022e:	4a0a      	ldr	r2, [pc, #40]	; (8000258 <LoopFillZerobss+0x1e>)
  ldr r4, =_ebss
 8000230:	4c0a      	ldr	r4, [pc, #40]	; (800025c <LoopFillZerobss+0x22>)
  movs r3, #0
 8000232:	2300      	movs	r3, #0
  b LoopFillZerobss
 8000234:	e001      	b.n	800023a <LoopFillZerobss>

08000236 <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 8000236:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 8000238:	3204      	adds	r2, #4

0800023a <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 800023a:	42a2      	cmp	r2, r4
  bcc FillZerobss
 800023c:	d3fb      	bcc.n	8000236 <FillZerobss>

/* Call static constructors */
    bl __libc_init_array
 800023e:	f000 f811 	bl	8000264 <__libc_init_array>
/* Call the application's entry point.*/
  bl  main
 8000242:	f7ff ffcf 	bl	80001e4 <main>
  bx  lr    
 8000246:	4770      	bx	lr
  ldr   sp, =_estack      /* set stack pointer */
 8000248:	20010000 	.word	0x20010000
  ldr r0, =_sdata
 800024c:	20000000 	.word	0x20000000
  ldr r1, =_edata
 8000250:	2000042c 	.word	0x2000042c
  ldr r2, =_sidata
 8000254:	080003b8 	.word	0x080003b8
  ldr r2, =_sbss
 8000258:	2000042c 	.word	0x2000042c
  ldr r4, =_ebss
 800025c:	2000044c 	.word	0x2000044c

08000260 <ADC_IRQHandler>:
 * @retval None       
*/
    .section  .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b  Infinite_Loop
 8000260:	e7fe      	b.n	8000260 <ADC_IRQHandler>
	...

08000264 <__libc_init_array>:
 8000264:	b570      	push	{r4, r5, r6, lr}
 8000266:	4e0d      	ldr	r6, [pc, #52]	; (800029c <__libc_init_array+0x38>)
 8000268:	4d0d      	ldr	r5, [pc, #52]	; (80002a0 <__libc_init_array+0x3c>)
 800026a:	1b76      	subs	r6, r6, r5
 800026c:	10b6      	asrs	r6, r6, #2
 800026e:	d006      	beq.n	800027e <__libc_init_array+0x1a>
 8000270:	2400      	movs	r4, #0
 8000272:	f855 3b04 	ldr.w	r3, [r5], #4
 8000276:	3401      	adds	r4, #1
 8000278:	4798      	blx	r3
 800027a:	42a6      	cmp	r6, r4
 800027c:	d1f9      	bne.n	8000272 <__libc_init_array+0xe>
 800027e:	4e09      	ldr	r6, [pc, #36]	; (80002a4 <__libc_init_array+0x40>)
 8000280:	4d09      	ldr	r5, [pc, #36]	; (80002a8 <__libc_init_array+0x44>)
 8000282:	1b76      	subs	r6, r6, r5
 8000284:	f000 f882 	bl	800038c <_init>
 8000288:	10b6      	asrs	r6, r6, #2
 800028a:	d006      	beq.n	800029a <__libc_init_array+0x36>
 800028c:	2400      	movs	r4, #0
 800028e:	f855 3b04 	ldr.w	r3, [r5], #4
 8000292:	3401      	adds	r4, #1
 8000294:	4798      	blx	r3
 8000296:	42a6      	cmp	r6, r4
 8000298:	d1f9      	bne.n	800028e <__libc_init_array+0x2a>
 800029a:	bd70      	pop	{r4, r5, r6, pc}
 800029c:	080003a8 	.word	0x080003a8
 80002a0:	080003a8 	.word	0x080003a8
 80002a4:	080003b4 	.word	0x080003b4
 80002a8:	080003a8 	.word	0x080003a8

080002ac <register_fini>:
 80002ac:	4b02      	ldr	r3, [pc, #8]	; (80002b8 <register_fini+0xc>)
 80002ae:	b113      	cbz	r3, 80002b6 <register_fini+0xa>
 80002b0:	4802      	ldr	r0, [pc, #8]	; (80002bc <register_fini+0x10>)
 80002b2:	f000 b805 	b.w	80002c0 <atexit>
 80002b6:	4770      	bx	lr
 80002b8:	00000000 	.word	0x00000000
 80002bc:	080002cd 	.word	0x080002cd

080002c0 <atexit>:
 80002c0:	2300      	movs	r3, #0
 80002c2:	4601      	mov	r1, r0
 80002c4:	461a      	mov	r2, r3
 80002c6:	4618      	mov	r0, r3
 80002c8:	f000 b81a 	b.w	8000300 <__register_exitproc>

080002cc <__libc_fini_array>:
 80002cc:	b538      	push	{r3, r4, r5, lr}
 80002ce:	4b08      	ldr	r3, [pc, #32]	; (80002f0 <__libc_fini_array+0x24>)
 80002d0:	4d08      	ldr	r5, [pc, #32]	; (80002f4 <__libc_fini_array+0x28>)
 80002d2:	1b5b      	subs	r3, r3, r5
 80002d4:	109c      	asrs	r4, r3, #2
 80002d6:	d007      	beq.n	80002e8 <__libc_fini_array+0x1c>
 80002d8:	3b04      	subs	r3, #4
 80002da:	441d      	add	r5, r3
 80002dc:	3c01      	subs	r4, #1
 80002de:	f855 3904 	ldr.w	r3, [r5], #-4
 80002e2:	4798      	blx	r3
 80002e4:	2c00      	cmp	r4, #0
 80002e6:	d1f9      	bne.n	80002dc <__libc_fini_array+0x10>
 80002e8:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 80002ec:	f000 b854 	b.w	8000398 <_fini>
 80002f0:	080003b8 	.word	0x080003b8
 80002f4:	080003b4 	.word	0x080003b4

080002f8 <__retarget_lock_acquire_recursive>:
 80002f8:	4770      	bx	lr
 80002fa:	bf00      	nop

080002fc <__retarget_lock_release_recursive>:
 80002fc:	4770      	bx	lr
 80002fe:	bf00      	nop

08000300 <__register_exitproc>:
 8000300:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8000304:	f8df a080 	ldr.w	sl, [pc, #128]	; 8000388 <__register_exitproc+0x88>
 8000308:	4606      	mov	r6, r0
 800030a:	f8da 0000 	ldr.w	r0, [sl]
 800030e:	4698      	mov	r8, r3
 8000310:	460f      	mov	r7, r1
 8000312:	4691      	mov	r9, r2
 8000314:	f7ff fff0 	bl	80002f8 <__retarget_lock_acquire_recursive>
 8000318:	4b1a      	ldr	r3, [pc, #104]	; (8000384 <__register_exitproc+0x84>)
 800031a:	681b      	ldr	r3, [r3, #0]
 800031c:	f8d3 4148 	ldr.w	r4, [r3, #328]	; 0x148
 8000320:	b324      	cbz	r4, 800036c <__register_exitproc+0x6c>
 8000322:	6865      	ldr	r5, [r4, #4]
 8000324:	2d1f      	cmp	r5, #31
 8000326:	dc26      	bgt.n	8000376 <__register_exitproc+0x76>
 8000328:	b95e      	cbnz	r6, 8000342 <__register_exitproc+0x42>
 800032a:	1c6b      	adds	r3, r5, #1
 800032c:	3502      	adds	r5, #2
 800032e:	f8da 0000 	ldr.w	r0, [sl]
 8000332:	6063      	str	r3, [r4, #4]
 8000334:	f844 7025 	str.w	r7, [r4, r5, lsl #2]
 8000338:	f7ff ffe0 	bl	80002fc <__retarget_lock_release_recursive>
 800033c:	2000      	movs	r0, #0
 800033e:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8000342:	eb04 0185 	add.w	r1, r4, r5, lsl #2
 8000346:	2301      	movs	r3, #1
 8000348:	f8c1 9088 	str.w	r9, [r1, #136]	; 0x88
 800034c:	f8d4 2188 	ldr.w	r2, [r4, #392]	; 0x188
 8000350:	40ab      	lsls	r3, r5
 8000352:	431a      	orrs	r2, r3
 8000354:	2e02      	cmp	r6, #2
 8000356:	f8c4 2188 	str.w	r2, [r4, #392]	; 0x188
 800035a:	f8c1 8108 	str.w	r8, [r1, #264]	; 0x108
 800035e:	d1e4      	bne.n	800032a <__register_exitproc+0x2a>
 8000360:	f8d4 218c 	ldr.w	r2, [r4, #396]	; 0x18c
 8000364:	4313      	orrs	r3, r2
 8000366:	f8c4 318c 	str.w	r3, [r4, #396]	; 0x18c
 800036a:	e7de      	b.n	800032a <__register_exitproc+0x2a>
 800036c:	f503 74a6 	add.w	r4, r3, #332	; 0x14c
 8000370:	f8c3 4148 	str.w	r4, [r3, #328]	; 0x148
 8000374:	e7d5      	b.n	8000322 <__register_exitproc+0x22>
 8000376:	f8da 0000 	ldr.w	r0, [sl]
 800037a:	f7ff ffbf 	bl	80002fc <__retarget_lock_release_recursive>
 800037e:	f04f 30ff 	mov.w	r0, #4294967295
 8000382:	e7dc      	b.n	800033e <__register_exitproc+0x3e>
 8000384:	080003a4 	.word	0x080003a4
 8000388:	20000428 	.word	0x20000428

0800038c <_init>:
 800038c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800038e:	bf00      	nop
 8000390:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8000392:	bc08      	pop	{r3}
 8000394:	469e      	mov	lr, r3
 8000396:	4770      	bx	lr

08000398 <_fini>:
 8000398:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800039a:	bf00      	nop
 800039c:	bcf8      	pop	{r3, r4, r5, r6, r7}
 800039e:	bc08      	pop	{r3}
 80003a0:	469e      	mov	lr, r3
 80003a2:	4770      	bx	lr
